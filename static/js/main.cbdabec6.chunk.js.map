{"version":3,"sources":["graphql/Settings.js","components/Button.js","components/Card.js","components/Notif.js","components/PageTitle.js","pages/MyPokemon.js","graphql/Queries.js","assets/pokeball.png","components/Loading.js","components/Title.js","components/Detail.js","components/Input.js","pages/PokemonDetail.js","pages/PokemonList.js","pages/404.js","components/Navbar.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["errorLink","onError","graphqlErrors","map","message","alert","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","Button","styled","div","props","confirmation","primary","StyledCard","Card","id","name","image","goToDetail","getOwned","onClickRelease","onClick","src","className","alt","width","Notif","StyledPageTitle","PageTitle","title","StyledPokemonList","MyPokemon","useState","pokemons","setPokemons","nickname","setNickName","screen","setScreen","data","useEffect","localStorage","getItem","JSON","parse","result","filter","inv","setItem","stringify","window","location","reload","handleRelease","length","pokemon","sprites","front_default","GET_POKEMON_LIST","gql","GET_POKEMON_DETAIL","StyledLoading","Loading","pokeball","Title","Detail","StyledInput","input","Input","handleChange","type","onChange","e","target","value","StyledPokemonDetail","PokemonDetail","useParams","history","useHistory","undefined","setPokemon","pokename","setPokename","error","setError","useQuery","variables","storeData","inventory","catched","push","savePokemon","isDuplicate","toUpperCase","Math","random","catchPokemon","catch","types","moves","string","move","replace","PokemonList","limit","setLimit","offset","loading","owned","results","pokemonlist","url","NotFound","StyledNavbar","Navbar","useLocation","pathname","text","icon","Content","App","exact","path","component","rxact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbdabec6.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\nconst errorLink = onError(({ graphqlErrors }) => {\n  graphqlErrors &&\n    graphqlErrors.map(({ message }) => {\n      return alert(`GraphQL error ${message}`);\n    });\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"https://graphql-pokeapi.vercel.app/api/graphql\" }),\n]);\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n","import styled from \"@emotion/styled\";\n\nconst Button = styled.div`\n  background: rgb(32 180 156);\n  border-radius: 5px;\n  box-shadow: 5px 10px 8px #4a4a4a;\n  color: #fff;\n  /* margin: ${(props) => (props.confirmation ? \"20px\" : \"0 70px 35px\")}; */\n  padding: 10px 15px;\n  text-align: center;\n  margin: 20px 0px;\n  \n  .title {\n    color: #fff;\n    font-weight: 600;\n    font-size: ${(props) => (props.primary ? \"1.6em\" : \"1.1em\")};\n    text-transform: capitalize;\n  }\n  :hover {\n    box-shadow: 0rem 0rem 0 #222;\n    border: 2px solid black;\n    cursor: pointer;\n    .title {\n      color: rgba(234, 52, 87, 1);\n    }\n  }\n`;\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nconst StyledCard = styled.div`\n  background: #ffffff;\n  border-radius: 7px;\n  box-shadow: 0rem 0.7rem 0 #a2613d;\n  font-weight: 400;\n  grid-column: span 4;\n  padding: 10px;\n  text-align: center;\n  .card-image {\n    width: 85%;\n    background: #f5e7c6;\n    border-radius: 10px;\n    padding: 10px;\n  }\n  .card-name {\n    text-transform: capitalize;\n    font-size: 1.2em;\n    margin: 10px 0 0;\n  }\n  .card-owned {\n    color: rgba(234, 52, 87, 1);\n    margin: 20px;\n  }\n  .card-btn {\n    background: rgb(32 180 156);\n    border-radius: 5px;\n    box-shadow: 3px 5px 8px #4a4a4a;\n    color: #fff;\n    margin: 20px 0;\n    padding: 7px 15px;\n    text-align: center;\n    :hover {\n      box-shadow: 0.1rem 0.1rem 0 #222;\n      cursor: pointer;\n    }\n  }\n  @media screen and (min-width: 620px) {\n    grid-column: span 3;\n  }\n  :hover {\n    border: 2px solid black;\n    box-shadow: 0rem 0rem 0 #222;\n    cursor: pointer;\n  }\n`;\n\nconst Card = ({ id, name, image, goToDetail, getOwned, onClickRelease }) => {\n  return (\n    <>\n      {id === \"pokemon-list\" ? (\n        <StyledCard onClick={() => goToDetail(name)}>\n          <img src={image} className='card-image' alt={`${name}`} width=\"50px\"/>\n          <p className='card-name'>{name}</p>\n          <p className='card-owned'>Owned: {getOwned(name)}</p>\n        </StyledCard>\n      ) : (\n        <StyledCard>\n          <img src={image} className='card-image' alt={`${name}`} />\n          <p className='card-name'>{name}</p>\n          <button className='card-btn' onClick={() => onClickRelease(name)}>\n            Release\n          </button>\n        </StyledCard>\n      )}\n    </>\n  );\n};\n\nexport default Card;\n","import styled from \"@emotion/styled\";\n\nconst Notif = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n`\n\nexport default Notif;\n","import styled from \"@emotion/styled\";\n\nconst StyledPageTitle = styled.div`\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  margin: 0 0 10px;\n  text-align: center;\n  .nav {\n    margin: 0 0 20px;\n    background: #cd835a;\n    color: #fff;\n    border-radius: 5px;\n    grid-column: span 8;\n    font-size: 1.2em;\n    padding: 10px;\n  }\n`;\n\nconst PageTitle = ({title}) => {\n  return (\n    <StyledPageTitle>\n      <div className='nav'>{title}</div>\n    </StyledPageTitle>\n  );\n};\n\nexport default PageTitle;\n","import { useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport Notif from \"../components/Notif\";\nimport PageTitle from \"../components/PageTitle\";\n\nconst StyledPokemonList = styled.div`\n  padding: 30px 20px;\n  min-height: 100vh;\n  .grid {\n    display: grid;\n    grid-template-columns: repeat(8, 1fr);\n    margin: 0 0 40px;\n    gap: 10px;\n  }\n  .loader {\n    text-align: center;\n  }\n  @media screen and (min-width: 620px) {\n    .grid {\n      grid-template-columns: repeat(9, 1fr);\n    }\n  }\n  @media screen and (min-width: 960px) {\n    .grid {\n      grid-template-columns: repeat(12, 1fr);\n    }\n  }\n`;\n\nconst MyPokemon = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [nickname, setNickName] = useState();\n  const [screen, setScreen] = useState(\"default\");\n\n  function onClickRelease(data) {\n    setScreen(\"confirmation\");\n    setNickName(data);\n  }\n\n  function handleRelease(name) {\n    let inventory = JSON.parse(localStorage.getItem(\"pokemon\"));\n    let result = inventory.filter((inv) => inv.nickname !== name);\n    localStorage.setItem(\"pokemon\", JSON.stringify(result));\n    window.location.reload(true);\n  }\n\n  useEffect(() => {\n    localStorage.getItem(\"pokemon\")\n      ? setPokemons(JSON.parse(localStorage.getItem(\"pokemon\")))\n      : setPokemons([]);\n  }, []);\n\n  return (\n    <>\n      {screen === \"confirmation\" ? (\n        <Notif>\n          <p>{`Are you sure you want to release ${nickname} ?`}</p>\n          <br />\n          <Button confirmation onClick={() => handleRelease(nickname)}>\n            Yes\n          </Button>\n          <Button confirmation onClick={() => setScreen(\"default\")}>\n            No\n          </Button>\n        </Notif>\n      ) : pokemons.length !== 0 ? (\n        <StyledPokemonList>\n          <PageTitle title='My Pokemon List' />\n          <div className='grid'>\n            {pokemons.map((pokemon) => (\n              <Card\n                id='my-pokemon'\n                key={pokemon.nickname}\n                name={pokemon.nickname}\n                image={pokemon.sprites.front_default}\n                onClickRelease={onClickRelease}\n              />\n            ))}\n          </div>\n        </StyledPokemonList>\n      ) : (\n        <Notif>\n          <p>{`Your Inventory is Empty`}</p>\n        </Notif>\n      )}\n    </>\n  );\n};\n\nexport default MyPokemon;\n","import { gql } from '@apollo/client';\n\nexport const GET_POKEMON_LIST = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\nexport const GET_POKEMON_DETAIL = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      name\n      sprites {\n        front_default\n      }\n      moves {\n        move {\n          name\n        }\n      }\n      types {\n        type {\n          name\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/pokeball.a508475f.png\";","import styled from \"@emotion/styled\";\nimport pokeball from \"../assets/pokeball.png\";\n\nconst StyledLoading = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  .pokemon-ball {\n    width:30%;\n    top: 50%;\n    left: 30%;\n  }\n`;\n\nconst Loading = () => {\n  return (\n    <StyledLoading>\n      <img src={pokeball} alt='pokeball' className=\"pokemon-ball\"/>\n    </StyledLoading>\n  );\n};\n\nexport default Loading;\n","import styled from \"@emotion/styled\";\n\nconst Title = styled.div`\n  margin: 0 0 20px;\n  background: #cd835a;\n  color: #fff;\n  border-radius: 5px;\n  box-shadow: 0rem 0.7rem 0 #a2613d;\n  padding: 10px;\n  text-align: center;\n  .title {\n    font-weight: 600;\n    font-size: ${(props) => (props.primary ? \"1.6em\" : \"1.1em\")};\n    text-transform: capitalize;\n  }\n`;\n\nexport default Title;\n","import styled from \"@emotion/styled\";\n\nconst Detail = styled.div`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(6, 1fr);\n  margin-bottom: 20px;\n  background: #d4ad98;\n  padding: 15px;\n  margin-top: -20px;\n  .card {\n    background: #ffffff;\n    border-radius: 10px;\n    grid-column: span 3;\n    padding: 10px;\n    p {\n      text-transform: capitalize;\n    }\n  }\n  @media screen and (max-width: 959px) and (min-width: 620px) {\n    .card {\n      grid-column: span 2;\n    }\n  }\n`;\n\nexport default Detail;\n","import styled from \"@emotion/styled\";\n\nconst StyledInput = styled.input`\n  background: #fff;\n  border-radius: 10px;\n  /* box-shadow: 0.3rem 0.3rem 0 #222; */\n  margin: 10px 70px 20px;\n  padding: 10px 15px;\n  &:focus {\n    outline: none;\n  }\n  @media screen and (min-width: 620px) {\n    width: 70%;\n    margin: 10px auto 20px;\n  }\n`;\n\nconst Input = ({ handleChange }) => {\n  return (\n    <StyledInput type='text' onChange={(e) => handleChange(e.target.value)} />\n  );\n};\n\nexport default Input;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport styled from \"@emotion/styled\";\n\nimport { GET_POKEMON_DETAIL } from \"../graphql/Queries\";\nimport Loading from \"../components/Loading\";\nimport Title from \"../components/Title\";\nimport Detail from \"../components/Detail\";\nimport Notif from \"../components/Notif\";\nimport Button from \"../components/Button\";\nimport Input from \"../components/Input\";\nimport pokeball from \"../assets/pokeball.png\";\n\nconst StyledPokemonDetail = styled.div`\n  padding: 30px 20px;\n  .image-container {\n    background: #f5e7c6;\n    border-radius: 10px;\n    padding: 15px;\n    text-align: center;\n    .pokemon-image {\n      width: 100%;\n    }\n  }\n  .pokeball {\n    width: 20%;\n  }\n  @media screen and (max-width: 959px) and (min-width: 620px) {\n    .image-container {\n      width: 50%;\n      margin: 20px auto;\n    }\n    .catch-button {\n      width: 25%;\n      margin: 20px auto;\n    }\n  }\n  @media screen and (min-width: 960px) {\n    .flex-container {\n      display: flex;\n      .avatar {\n        width: 40%;\n        padding: 10px 20px;\n      }\n      .info {\n        width: 60%;\n        padding: 10px 20px;\n      }\n    }\n  }\n`;\n\nconst PokemonDetail = () => {\n  let { name } = useParams();\n  const history = useHistory();\n  const [pokemon, setPokemon] = useState(undefined);\n  const [screen, setScreen] = useState(\"detail\");\n  const [pokename, setPokename] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const { data } = useQuery(GET_POKEMON_DETAIL, {\n    variables: {\n      name,\n    },\n  });\n\n  function catchPokemon() {\n    let result = Math.random() < 0.5;\n    if (result) setScreen(\"success\");\n    else setScreen(\"fail\");\n  }\n\n  function removeDashes(string) {\n    return string.replace(/-/g, \" \");\n  }\n\n  function getLocalStore() {\n    let local = localStorage.getItem(\"pokemon\");\n    if (local) {\n      return JSON.parse(localStorage.getItem(\"pokemon\"));\n    } else {\n      return [];\n    }\n  }\n\n  function storeData(inventory, catched) {\n    inventory.push(catched);\n    localStorage.setItem(\"pokemon\", JSON.stringify(inventory));\n    setPokename(\"\");\n    history.push(\"/inventory\");\n  }\n\n  function savePokemon(value) {\n    let inventory = getLocalStore();\n    let catched;\n\n    // Check if catched pokemon name is empty\n    if (pokename !== \"\") {\n      catched = {\n        ...value,\n        nickname: pokename,\n      };\n    } else {\n      setError(\"empty\");\n      setScreen(\"error\");\n      return;\n    }\n\n    if (inventory.length > 0) {\n      let isDuplicate = false;\n      inventory.map((inv) => {\n        if (pokename.toUpperCase() === inv.nickname.toUpperCase()) {\n          isDuplicate = true;\n        }\n      });\n      if (!isDuplicate) {\n        storeData(inventory, catched);\n      } else {\n        setError(\"duplicate\");\n        setScreen(\"error\");\n        setPokename(\"\");\n      }\n    } else {\n      storeData(inventory, catched);\n    }\n  }\n\n  useEffect(() => {\n    data && setPokemon(data.pokemon);\n  }, [data]);\n\n  return (\n    <>\n      {screen === \"success\" ? (\n        <Notif>\n          <p>\n            {`You did it! ${pokemon.name} is catched! Please input its name to save in to your\n            Pokemon Inventory!`}\n          </p>\n          <br />\n          <Input handleChange={setPokename} />\n          <Button onClick={() => savePokemon(pokemon)}>Save</Button>\n        </Notif>\n      ) : screen === \"fail\" ? (\n        <Notif>\n          <p>{`Whoops! Failed to Catch The ${pokemon.name} ! Try again later..`}</p>\n          <br />\n          <Button onClick={() => setScreen(\"detail\")}>Back</Button>\n        </Notif>\n      ) : screen === \"error\" ? (\n        <Notif>\n          <p>\n            {error === \"empty\"\n              ? `Find Another Pokemon Name`\n              : `Its name is exist!`}\n          </p>\n          <br />\n          <Button onClick={() => setScreen(\"success\")}>Back</Button>\n        </Notif>\n      ) : pokemon ? (\n        <StyledPokemonDetail>\n          <div className='flex-container'>\n            <div className='avatar'>\n              <div title='title'>\n                <Title primary>\n                  <p className='title'>{pokemon.name}</p>\n                </Title>\n                <div className='image-container'>\n                  <img\n                    className='pokemon-image'\n                    src={pokemon.sprites.front_default}\n                    alt='pokemon'\n                  />\n                </div>\n                <Button onClick={() => catchPokemon()} className='catch-button' catch>\n                  <img src={pokeball} className='pokeball' alt={\"pokeball\"} />\n                  <p className='title'>Catch!</p>\n                </Button>\n              </div>\n              <div title='types'>\n                <Title>\n                  <p className='title'>Types</p>\n                </Title>\n                <Detail>\n                  {pokemon.types &&\n                    pokemon.types.map((types) => {\n                      const { type } = types;\n                      return (\n                        <div className='card' key={type.name}>\n                          <p>{type.name}</p>\n                        </div>\n                      );\n                    })}\n                </Detail>\n              </div>\n            </div>\n            <div className='info'>\n              <div title='moves'>\n                <Title>\n                  <p className='title'>Moves</p>\n                </Title>\n                <Detail>\n                  {pokemon.moves &&\n                    pokemon.moves.map((moves) => {\n                      const { move } = moves;\n                      return (\n                        <div className='card' key={move.name}>\n                          <p>{removeDashes(move.name)}</p>\n                        </div>\n                      );\n                    })}\n                </Detail>\n              </div>\n            </div>\n          </div>\n        </StyledPokemonDetail>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default PokemonDetail;\n","import { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nimport { GET_POKEMON_LIST } from \"../graphql/Queries\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport Loading from \"../components/Loading\";\nimport PageTitle from \"../components/PageTitle\";\n\nconst StyledPokemonList = styled.div`\n  padding: 30px 20px;\n  .grid {\n    display: grid;\n    grid-template-columns: repeat(8, 1fr);\n    gap: 20px;\n   Loadinground: #d4ad98;\n    padding: 15px;\n    margin-top: -33px;\n  }\n  .loader {\n    text-align: center;\n  }\n  @media screen and (min-width: 620px) {\n    .grid {\n      grid-template-columns: repeat(9, 1fr);\n    }\n  }\n  @media screen and (min-width: 960px) {\n    .grid {\n      grid-template-columns: repeat(12, 1fr);\n    }\n  }\n`;\n\nconst PokemonList = () => {\n  const history = useHistory();\n  const [pokemons, setPokemons] = useState([]);\n  const [limit, setLimit] = useState(12);\n\n  const { loading, data } = useQuery(GET_POKEMON_LIST, {\n    variables: {\n      limit,\n      offset: 0,\n    },\n  });\n\n  function goToDetail(name) {\n    history.push(`pokemon/${name}`);\n  }\n\n  function getOwned(name) {\n    let inventory = localStorage.getItem(\"pokemon\");\n    if (inventory) {\n      let owned = 0;\n      inventory = JSON.parse(inventory);\n      inventory.map((inv) => {\n        if (inv.name === name) {\n          owned = owned + 1;\n        }\n      });\n      return owned;\n    } else return 0;\n  }\n\n  useEffect(() => {\n    data && setPokemons(data.pokemons.results);\n  }, [data]);\n\n  return (\n    <>\n      {pokemons !== null ? (\n        <StyledPokemonList>\n          <PageTitle title='All Pokemon' />\n          <div className='grid'>\n            {pokemons.map((pokemon) => (\n              <Card\n                pokemonlist\n                id={'pokemon-list'}\n                key={pokemon.name}\n                name={pokemon.name}\n                url={pokemon.url}\n                image={pokemon.image}\n                goToDetail={goToDetail}\n                getOwned={getOwned}\n              />\n            ))}\n          </div>\n          {!loading && (\n            <div className='loader'>\n              <Button onClick={() => setLimit(limit + 12)}>Load More</Button>\n            </div>\n          )}\n        </StyledPokemonList>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default PokemonList;\n","import Notif from \"../components/Notif\";\n\nconst NotFound = () => {\n  return (\n    <Notif>\n      <p>Page not found.</p>\n    </Notif>\n  );\n};\n\nexport default NotFound;\n","import styled from \"@emotion/styled\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { FaPaw } from 'react-icons/fa';\nimport { FaReply } from 'react-icons/fa';\n\nconst StyledNavbar = styled.div`\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  padding: 10px 20px;\n  .nav {\n    background: rgb(32 180 156);\n    color: #fff;\n    border-radius: 5px;\n    box-shadow: 5px 10px 8px #4a4a4a;\n    grid-column: span 8;\n    font-size: 1.1em;\n    padding: 10px;\n    text-align: center;\n    :hover {\n      box-shadow: 0rem 0rem 0 #222;\n      border: 2px solid black;\n      cursor: pointer;\n    }\n  }\n`;\n\nconst Navbar = () => {\n  const history = useHistory();\n  const location = useLocation();\n  let url = location.pathname === '/' ? '/inventory' : '/';\n  let text = location.pathname === '/' ? ' View My Pokemon' : 'View All Pokemon';\n  let icon = location.pathname === '/' ? <FaPaw /> : <FaReply />;\n\n  return (\n    <StyledNavbar onClick={() => history.push(url)}>\n      <div className='nav'>\n         {icon} &nbsp; {text}\n      </div>\n    </StyledNavbar>\n  );\n};\n\nexport default Navbar;\n","import styled from \"@emotion/styled\";\n\nconst Content = styled.div`\n  @media screen and (min-width: 620px) {\n    max-width: 600px;\n    margin: auto;\n  }\n  @media screen and (min-width: 960px) {\n    max-width: 800px;\n    margin: auto;\n  }\n`;\n\nexport default Content;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./graphql/Settings\";\n\nimport MyPokemon from \"./pages/MyPokemon\";\nimport PokemonDetail from \"./pages/PokemonDetail\";\nimport PokemonList from \"./pages/PokemonList\";\nimport NotFound from \"./pages/404\";\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Content>\n        <Navbar />\n          <Switch>\n            <Route exact path='/pokemon-app' component={PokemonList} />\n            <Route exact path='/' component={PokemonList} />\n            <Route rxact path='/pokemon/:name' component={PokemonDetail} />\n            <Route exact path='/inventory' component={MyPokemon} />\n            <Route component={NotFound} />\n          </Switch>\n        </Content>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}